<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tutorials on ZAINABED</title>
    <link>https://www.zainabed.com/tutorials/</link>
    <description>Recent content in Tutorials on ZAINABED</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Nov 2022 09:00:00 +0000</lastBuildDate><atom:link href="https://www.zainabed.com/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create Maven Project Through Command Line</title>
      <link>https://www.zainabed.com/tutorials/maven-create-a-project-command-line/</link>
      <pubDate>Tue, 29 Nov 2022 09:00:00 +0000</pubDate>
      
      <guid>https://www.zainabed.com/tutorials/maven-create-a-project-command-line/</guid>
      <description>Introduction How often do you create a Maven project from your preferred editor? The response would be frequently or always.
But have you ever thought about what Maven command your editor used to create the project? Yes, maven projects are built solely with the maven command, exactly as &amp;ldquo;mvn clean install&amp;rdquo; is used to create a project&amp;rsquo;s jar file.
This tutorial will teach you about such a command.
Maven Command Open your terminal and navigate to the directory in which you want to create a new Maven project.</description>
    </item>
    
    <item>
      <title>Easy Steps To Create Log4j2 Rolling File For Spring Boot</title>
      <link>https://www.zainabed.com/tutorials/spring-log4j2-rolling-file/</link>
      <pubDate>Sun, 20 Nov 2022 01:50:08 -0500</pubDate>
      
      <guid>https://www.zainabed.com/tutorials/spring-log4j2-rolling-file/</guid>
      <description>Introduction Spring Boot applications can save informative messages or application errors to a file. This functionality allows you to monitor the application&amp;rsquo;s health and take necessary action when problems arise.
Logging all of this information to a single file, on the other hand, will cause the file to expand in size, which would be a nightmare if the file size rose to MB or GB and you wanted to trace a specific exception throughout the whole log file.</description>
    </item>
    
    <item>
      <title>Two Steps To Add Log4j2 To Spring Boot Application</title>
      <link>https://www.zainabed.com/tutorials/spring-boot-log4j2-setup/</link>
      <pubDate>Thu, 17 Nov 2022 02:10:33 -0500</pubDate>
      
      <guid>https://www.zainabed.com/tutorials/spring-boot-log4j2-setup/</guid>
      <description>Introduction Log4j2 is a comprehensive and modern framework for logging messages in applications.
And Spring Boot, which is widely used in industry, provides excellent support for Log4j2.
In this tutorial, we will look at how to configure it using an XML and YAML file.
Setup Download the Spring Boot application from Spring Boot Starter and extract the zip file.
POM Configuration Add log4j2 as a dependency to the pom.xml file.Â pom.</description>
    </item>
    
    <item>
      <title>First Step Toward Spring Boot Cloud Gateway </title>
      <link>https://www.zainabed.com/tutorials/spring-boot-cloud-gateway-introduction/</link>
      <pubDate>Mon, 07 Nov 2022 10:39:48 -0500</pubDate>
      
      <guid>https://www.zainabed.com/tutorials/spring-boot-cloud-gateway-introduction/</guid>
      <description>Introduction This tutorial is a short introduction to Spring Cloud Gateway.
By following the quick and easy steps provided below, you will be able to start the REST API gateway project.
Prerequisite  Java Maven Spring Boot  Download the Spring Boot project from Spring Initializr and select Gateway  as dependency.
Now generate and download the project and use your favourite editor to import it.
Gateway Configuration You can use a YAML file or Java code to configure routes.</description>
    </item>
    
    <item>
      <title>How To Use json-server To Build Mock REST API Server</title>
      <link>https://www.zainabed.com/tutorials/create-mock-server-using-json-server/</link>
      <pubDate>Thu, 03 Nov 2022 05:19:14 -0400</pubDate>
      
      <guid>https://www.zainabed.com/tutorials/create-mock-server-using-json-server/</guid>
      <description>Introduction A mock REST API server will often expedite your integration testing, and this tutorial will give you insight into one such server.
This tutorial will walk through each step of setting up and using a fake server.
 Software used in this tutorial  NPM : 8.3.1 Node: 16.14.0 Json-Server: 0.17.0   Setup The first step is to make sure you have node and npm installed on your workstation, then follow the next commands.</description>
    </item>
    
    <item>
      <title>Spring Boot File Upload With RestTemplate</title>
      <link>https://www.zainabed.com/tutorials/upload-file-spring-resttemplate/</link>
      <pubDate>Wed, 19 Oct 2022 06:13:04 -0400</pubDate>
      
      <guid>https://www.zainabed.com/tutorials/upload-file-spring-resttemplate/</guid>
      <description>Introduction This quick tutorial will show you how to use Spring Boot RestTemplate to upload a file to a server.
The prerequisites for this tutorial are the following
 the server that accepts requests for multipart file uploads A RestTemplate instance Of course, a text file to upload.   What You Need This tutorial uses following softwares  Java: 1.8 Spring Boot: 2.7.4 Maven: 3.6.3  How to upload a file First we create an instance of RestTemplate as</description>
    </item>
    
  </channel>
</rss>
